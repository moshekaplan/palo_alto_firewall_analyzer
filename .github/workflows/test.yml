# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pip install .
        pytest
        python -m pip install -e .
        coverage run -m pytest .
        coverage json  --include "src/*"
    - name: "Upload coverage data"
      uses: actions/upload-artifact@v3
      with:
        name: covdata
        path: coverage.json

  coverage:
    name: Coverage
    needs: tests
    runs-on: ubuntu-latest
    if: github.repository == 'moshekaplan/palo_alto_firewall_analyzer' && github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
      - name: "Set up Python"
        uses: "actions/setup-python@v4"
        with:
          python-version: "3.11"
      - name: "Download coverage data"
        uses: actions/download-artifact@v3
        with:
          name: covdata
      - name: Extract coverage stats
        run: |
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
      - name: "Make badge"
        uses: schneegans/dynamic-badges-action@v1.4.0
        with:
          # GIST_TOKEN is a GitHub personal access token with scope "gist".
          auth: ${{ secrets.PALO_ALTO_FIREWALL_ANALYZER_CODECOVERAGE_TOKEN }}
          # Updates Gist at https://gist.github.com/moshekaplan/1165ad4d7c2e8827ec6573b8bee2b7d9/
          gistID: 1165ad4d7c2e8827ec6573b8bee2b7d9
          filename: PALO_ALTO_FIREWALL_ANALYZER_CODECOVERAGE_covbadge.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}
